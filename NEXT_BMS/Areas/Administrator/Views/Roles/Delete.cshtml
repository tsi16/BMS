@using Insya.Localization;
@model NEXT_BMS.Models.Role
@{
    ViewBag.Title = "Role";
    ViewBag.PageDescription = "Details";
    var menus = Model.RolesMenus.Select(x => x.Menu);
    var Categories = menus.Where(m => m.RolesMenus.Any()).Select(x => x.MenuCategory).Distinct();
    var Applications = Categories.Select(x => x.Application).Distinct();
    var Users = Model.UserRoles.Select(x => x.User);
    int usercount = Users.Any(x => x.IsActive) ? Users.Count(x => x.IsActive) : 0;
}
@{ViewData["id"] = Model.Id;}
@await Html.PartialAsync("Controls/_Common")
<div class="card border-start border-start-width-2 border-start-secondary border-end border-end-width-1 border-end-secondary rounded-0">
    <div class="card-header bg-light header-elements-inline">
        <h5 class="card-title">
            @Html.Raw(Localization.Get(ViewData["action"].ToString())) | @Html.Raw(Localization.Get(ViewData["pageName"].ToString()))
        </h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
                <a class="list-icons-item" data-action="reload"></a>
                <a class="list-icons-item" data-action="remove"></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-danger">
            <span class="fw-semibold">Deleting!</span> Are you sure you want to delete this?
            <i class="ph-x-circle float-end ms-2"></i>
        </div>
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="Tab_1" data-toggle="tab" href="#app_Tab_1" role="tab" aria-controls="Tab_1" aria-selected="true">
                    @Html.Raw(Localization.Get("Basic Information"))
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="Tab_2" data-toggle="tab" href="#app_Tab_2" role="tab" aria-controls="Tab_2" aria-selected="true">
                    @Html.Raw(Localization.Get("Assigned Users"))
                </a>
            </li>
        </ul>

        <div class="tab-content">
            <div class="tab-pane active show" id="app_Tab_1" role="tabpanel" aria-labelledby="Tab_1">
                <table class="table table-sm table-hover table-striped table-border-dashed">
                    <tr>
                        <th>@Html.Raw(Localization.Get("Name"))</th>
                        <td>@Html.DisplayFor(model => model.Name)</td>
                    </tr>
                    <tr>
                        <th>@Html.Raw(Localization.Get("Users"))</th>
                        <td>@Html.DisplayFor(model => usercount)</td>
                    </tr>
                    <tr>
                        <th>@Html.Raw(Localization.Get("IsActive"))</th>
                        <td>@Html.DisplayFor(model => model.IsActive)</td>
                    </tr>
                </table>
            </div>

            <div class="tab-pane" id="app_Tab_2" role="tabpanel" aria-labelledby="Tab_2">
                <table class="table table-togglable table-hover table-xs">
                    <thead>
                        <tr>
                            <th data-toggle="true" class="footable-visible footable-first-column">
                                @Html.Raw(Localization.Get("FullName"))
                            </th>
                            <th data-hide="phone">
                                @Html.Raw(Localization.Get("MobileNumber"))
                            </th>

                            <th data-hide="phone">
                                @Html.Raw(Localization.Get("Email"))
                            </th>

                            <th data-hide="phone">
                                @Html.Raw(Localization.Get("Status"))
                            </th>

                            <th class="text-center" style="width: 30px;"><i class="icon-menu-open2"></i></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Users)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>

                                <td>
                                    @if (item.IsActive)
                                    {
                                        <a href="#" class="badge bg-success dropdown-toggle" data-toggle="dropdown">Active</a>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a href="@Url.Action("Block","Users",new{Id=item.Id })" class="dropdown-item"><span class="badge badge-mark mr-2 bg-danger border-danger"></span> Block</a>
                                        </div>
                                    }
                                    else
                                    {
                                        <a href="#" class="badge bg-danger dropdown-toggle" data-toggle="dropdown">Blocked</a>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a href="@Url.Action("Activate","Users",new{Id=item.Id })" class="dropdown-item"><span class="badge badge-mark mr-2 bg-success border-success"></span> Activate</a>
                                        </div>
                                    }
                                </td>

                                <td class="text-center">
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <h4 class="border-bottom-1 border-bottom-info-300 pt-2">
            @Html.Raw(Localization.Get("Menus"))
        </h4>
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            @foreach (var Application in Applications.OrderBy(x => x.Name))
            {
                <li class="nav-item">
                    <a class="nav-link" id="@Application.Id-tab" data-toggle="tab" href="#app_@Application.Id" role="tab" aria-controls="@Application.Name" aria-selected="true">
                        <i class="@Application.Icon"></i>
                        @Application.Acronym
                    </a>
                </li>
            }
        </ul>

        <div class="tab-content">

            @foreach (var Application in Applications.OrderBy(x => x.Name))
            {
                var MenuCategories = Categories.Where(x => x.ApplicationId == Application.Id && x.Menus.Any(z => z.RolesMenus.Any(r => r.RoleId == Model.Id)));
                <div class="tab-pane" id="app_@Application.Id" role="tabpanel" aria-labelledby="@Application.Id-tab">

                    @foreach (var Category in MenuCategories)
                    {
                        var Menus = Category.Menus.Where(x => x.IsDeleted == false);
                        var Controllers = Menus.Where(m => m.RolesMenus.Any(r => r.RoleId == Model.Id)).Select(x => x.Controller).Distinct();
                        <h3>
                            @Category.Name
                        </h3>
                        <div class="card-group-control card-group-control-right">
                            @foreach (var Controller in Controllers)
                            {
                                var gid = "g_" + Category.Id + "_" + Controller;
                                <div class="card mb-2">
                                    <div class="card-header bg-light">
                                        <h6 class="card-title">
                                            <a class="text-default collapsed" data-toggle="collapse" href="#@gid">
                                                <i class="icon-menu7 mr-2 text-slate"></i> @Controller
                                            </a>
                                        </h6>
                                    </div>
                                    <div id="@gid" class="collapse">
                                        <div class="card-body">
                                            <div class="row">
                                                @foreach (var menu in Menus.Where(x => x.Controller == Controller))
                                                {
                                                    if (Model.RolesMenus.Any(x => x.MenuId == menu.Id))
                                                    {
                                                        <div class="col-md-3">
                                                            <label>
                                                                @menu.Title
                                                            </label>
                                                        </div>
                                                    }

                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
        </div>

    </div>
    <div class="card-footer"></div>
</div>

@section Scripts {

    <script type="text/javascript">
        $(this).submit(function (e) {
            e.preventDefault();
            var selected = [];
            $('input:checked').each(function () {
                if (!isNaN($(this).val())) {
                    selected.push($(this).val());
                }
            });
            var fd = new FormData();
            fd.append('name', $("#Name").val());
            fd.append('Id', $("#Id").val());
            fd.append('IsActive', $("#IsActive").val());
            fd.append('selectedMenus', selected);

            $.ajax({
                cache: false,
                url: '@Url.Action("Edit", "Roles")',
                type: 'POST',
                data: fd,
                cache: false,
                async: false,
                dataType: 'json',
                processData: false,
                contentType: false,
                complete: function (data, textStatus, jqXHR) {
                    window.location = '/Roles/';
                }

            });
        });

        $(document).ready(function () {

            $(".selectAll").change(function () {
                $("input[name='M_" + $(this).attr('name') + "']").not(this).prop('checked', this.checked);
            });

            $(".checkSingle").click(function () {
                if ($(this).is(":checked")) {
                    var isAllChecked = 0;
                    $("input[name='M_" + $(this).attr('name') + "']").each(function () {
                        if (!this.checked)
                            isAllChecked = 1;
                    });

                    if (isAllChecked == 0) {
                        $("#selecctall_" + $(this).attr('name')).prop("checked", true);
                    }
                }
                else {
                    $("#selecctall_" + $(this).attr('name')).prop("checked", false);
                }
            });
        });

    </script>
}