@model NEXT_BMS.Models.MaintenanceRequest
@using Insya.Localization;
@{ViewData["id"]=Model.Id;}
@await Html.PartialAsync("Controls/_Common")
<div class="card border-start border-start-width-2 border-start-secondary border-end border-end-width-1 border-end-secondary rounded-0">
    <div class="card-header bg-light header-elements-inline">
        <h5 class="card-title">
            @Html.Raw(Localization.Get(ViewData["action"].ToString())) | @Html.Raw(Localization.Get(ViewData["pageName"].ToString()))
        </h5>
        <div class="header-elements">
            <div class="list-icons">
                <a class="list-icons-item" data-action="collapse"></a>
                <a class="list-icons-item" data-action="reload"></a>
                <a class="list-icons-item" data-action="remove"></a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <table class="table table-xs">
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.Description)
                        </td>
                        <th>
                            @Html.DisplayFor(model => model.Description)
                        </th>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.DateSubmitted)
                        </td>
                        <th>
                            @Html.DisplayFor(model => model.DateSubmitted)
                        </th>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.IsActive)
                        </td>
                        <th>
                            @Html.DisplayFor(model => model.IsActive)
                        </th>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.IsDeleted)
                        </td>
                        <th>
                            @Html.DisplayFor(model => model.IsDeleted)
                        </th>
                    </tr>
                   
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.MaintenanceStatus)
                        </td>
                        <th>
                            @Html.DisplayFor(model => model.MaintenanceStatus.Name)
                        </th>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.MaintenanceType)
                        </td>
                        <th>
                            @Html.DisplayFor(model => model.MaintenanceType.Name)
                        </th>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.Room)
                        </td>
                        <th>
                            @Html.DisplayFor(model => model.Room.Description)
                        </th>
                    </tr>
                    <tr>
                        <td>
                            @Html.DisplayNameFor(model => model.User)
                        </td>
                        <th>
                            @Html.DisplayFor(model => model.User.Email)
                        </th>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="card">
    <div class="card-header bg-light header-elements-inline">
        <h5 class="card-title">
            @Html.Raw(Localization.Get(ViewData["action"].ToString())) | @Html.Raw(Localization.Get(ViewData["pageName"].ToString()))
        </h5>
        <div class="header-elements">
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal_createMaintenanceAllocation">
            <i class="icon-plus mr-1"></i>     Request Maintenance
            </button>
        </div>
    </div>
    <div class="body">
        <table class="table table-sm table-hover">
            <thead>
                <tr>
                    <th>
                        Employee
                    </th>
                    <th>
                        AllocatedDate
                    </th>
                    <th>
                        AllocationStatus
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MaintenanceRequestAllocations.Where(x => !x.IsDeleted))
                {
                    <tr>
                        <td>
                            @item.BuildingEmployee.FullName
                        </td>
                        <td>
                            @item.AllocatedDate
                        </td>
                        <td>
                            @item.AllocationStatus.Name
                        </td>
                        <td>
                            <button class="btn btn-outline-danger me-1" onclick="removerequest('@item.Id')"><i class="icon-trash"></i></button>
                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>

</div> 

<div class="modal fade" id="modal_createMaintenanceAllocation" tabindex="-1" aria-labelledby="modal_createMaintenanceAllocation" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createshopRequestLabel">
                    <i class="icon-plus2 me-2"></i>@Html.Raw(Localization.Get("Create Maintenance Allocation"))
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
               
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                  @*   <input type="hidden" id="Id" name="Id"/> *@ <!-- If you need an Id, adjust as necessary. -->
                    <input type="hidden" id="MaintenanceRequestId" name="MaintenanceRequestId" value="@Model.Id" /> <!-- Ensure Model.Id is populated -->
                    <input type="hidden" id="AllocationStatusId" name="AllocationStatusId" value="1" /> <!-- Set a default or make sure to capture this correctly -->

                <div class="form-group">
                    <label for="BuildingEmployees">@Html.Raw(Localization.Get("building employees"))</label>
                    <select name="BuildingEmployeeId" id="BuildingEmployeeId" class="form-control" asp-items="ViewBag.BuildingEmployees">
                        <option value="">-- Select a Building Employee --</option>
                    </select>
                </div>
                    
                    <button type="submit" class="btn btn-custom w-100" onclick="SaveMaintenanceRequest()">
                        <i class="icon-checkmark3 me-2"></i>Save
                    </button>
               
            </div>
            <div class="modal-footer">
                <button class="btn btn-link" data-bs-dismiss="modal">
                    <i class="icon-cross2 me-2"></i>Close
                </button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("js/_alertify");}
    @{await Html.RenderPartialAsync("js/_select2");}
    <script type="text/javascript">
 
 function SaveMaintenanceRequest() {
    let maintenanceRequestId = $('#MaintenanceRequestId').val();
    let allocationStatusId = $('#AllocationStatusId').val();
    let buildingEmployeeId = $('#BuildingEmployeeId').val(); 

    $.ajax({
        type: 'POST',
        url: '/Administrator/MaintenanceRequests/CreateMaintenanceRequest',
        data: {
            'MaintenanceRequestId':maintenanceRequestId,
            'AllocationStatusId': allocationStatusId,
            'BuildingEmployeeId': buildingEmployeeId 
        },
      
    });
}
 
               function removerequest(id) {
               alertify.set({ labels: { ok: "Yes Continue", cancel: "No Cancel" } });
               alertify.confirm("Are you sure you want to delete ailure Grade Count?", function (e) {
                   if (e) {
                            $.ajax({
                            type: 'POST',
                            url: '/Administrator/MaintenanceRequests/removerequests',
                            data: { Id: id },
                            success: function (data) {
                                    alertify.success("success");
                                    location.reload(true);
                            },
                            error: function () {
                                alert('Error removing request.');
                            }
                        });
                   }
               });
           }
                   


</script>
}