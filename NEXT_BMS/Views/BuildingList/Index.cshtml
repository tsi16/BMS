@model IEnumerable<NEXT_BMS.Models.Building>

@{
    ViewData["Title"] = "Home";
}

<div class="container my-5">
    <div class="text-center mb-5">
        <h1 class="display-5 fw-bold text-primary">🏙 Explore Our Featured Buildings</h1>
        <p class="text-muted fs-5">Discover top-rated buildings with modern facilities and prime locations.</p>
    </div>
    <div class="card border-0 shadow-sm rounded-4 mb-4 px-3 py-4" style="background-color: #f8f9fa;">
        <form asp-action="Index" method="get" class="row g-3 align-items-end">

            <div class="col-md-3">
                <label for="cityDropdown" class="form-label fw-medium small">🏙 City</label>
                <select class="form-select form-select-sm rounded-3 shadow-sm" name="cityId" id="cityDropdown">
                    <option value="">All Cities</option>
                    @foreach (var city in (List<NEXT_BMS.Models.City>)ViewBag.Cities)
                    {
                        var isSelected = ViewBag.SelectedCityId != null && city.Id == ViewBag.SelectedCityId;
                        <option value="@city.Id" selected="@(isSelected ? "selected" : null)">@city.Name</option>
                    }
                </select>
            </div>

            <div class="col-md-3">
                <label for="locationDropdown" class="form-label fw-medium small">📍 Location</label>
                <select class="form-select form-select-sm rounded-3 shadow-sm" name="locationId" id="locationDropdown">
                    <option value="">All Locations</option>
                    @foreach (var location in (List<NEXT_BMS.Models.Location>)ViewBag.Locations)
                    {
                        var isSelected = ViewBag.SelectedLocationId != null && location.Id == ViewBag.SelectedLocationId;
                        <option value="@location.Id" selected="@(isSelected ? "selected" : null)">@location.Name</option>
                    }
                </select>
            </div>

            <div class="col-md-3">
                <label class="form-label fw-medium small">🏢 Use Type</label>
                <select class="form-select form-select-sm rounded-3 shadow-sm" name="useTypeId">
                    <option value="">All Use Types</option>
                    @foreach (var useType in (List<NEXT_BMS.Models.UseType>)ViewBag.UseTypes)
                    {
                        var isSelected = ViewBag.SelectedUseTypeId != null && useType.Id == ViewBag.SelectedUseTypeId;
                        <option value="@useType.Id" selected="@(isSelected ? "selected" : null)">@useType.Name</option>
                    }
                </select>
            </div>

            <div class="col-md-3 d-grid">
                <button type="submit" class="btn btn-sm btn-outline-primary rounded-3 shadow-sm">
                    🔍 Filter
                </button>
            </div>
        </form>
    </div>
   
   
    <div class="row g-4">
        @foreach (var item in Model)
        {
            var availableRoomCount = item.Floors.SelectMany(f => f.Rooms).Count();
            var image = item.BuildingImages?.FirstOrDefault();

            <div class="col-md-6 col-lg-4">
                <div class="card border-0 shadow-sm rounded-4 h-100 bg-light building-card hover-scale">

                    @if (image != null)
                    {
                        <img src="@image.Url" class="card-img-top rounded-top-4" style="height: 240px; object-fit: cover;" />
                    }
                    else
                    {
                        <div class="bg-secondary text-white text-center py-5 rounded-top-4" style="height: 240px;">
                            <i class="bi bi-building display-4"></i>
                            <div>No Image</div>
                        </div>
                    }

                    <div class="card-body d-flex flex-column p-4">
                        <div class="mb-3">
                            <h5 class="card-title text-primary fw-bold">@item.Name</h5>
                            <div class="text-muted small mb-2">
                                <i class="bi bi-geo-alt-fill me-1"></i>
                                @item.Location?.City?.Name - @item.Location?.Name
                            </div>
                            <p class="card-text text-secondary small">@item.Description</p>

                            @if (availableRoomCount > 0)
                            {
                                <span class="badge bg-success rounded-pill mt-2">
                                    🛏 @availableRoomCount Room@(availableRoomCount > 1 ? "s" : "") Available
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-secondary rounded-pill mt-2">
                                    No Rooms Available
                                </span>
                            }
                        </div>

                        <div class="mt-auto text-end">
                            <a asp-action="Details"
                               asp-route-id="@item.Id"
                               asp-route-cityId="@ViewBag.SelectedCityId"
                               asp-route-locationId="@ViewBag.SelectedLocationId"
                               asp-route-useTypeId="@ViewBag.SelectedUseTypeId"
                               asp-route-page="@ViewBag.CurrentPage"
                               class="btn btn-outline-info btn-sm rounded-pill px-4">
                                View Details
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

   
    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
            {
                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@i"
                       asp-route-cityId="@(ViewBag.SelectedCityId ?? "")"
                       asp-route-locationId="@(ViewBag.SelectedLocationId ?? "")"
                       asp-route-useTypeId="@(ViewBag.SelectedUseTypeId ?? "")">
                        @i
                    </a>
                </li>
            }
        </ul>
    </nav>

</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const cityDropdown = document.getElementById("cityDropdown");
            const locationDropdown = document.getElementById("locationDropdown");

            function loadLocations(cityId, selectedLocationId = "") {
                locationDropdown.innerHTML = '<option value="">All Locations</option>';
                if (!cityId) return;

                fetch(`/BuildingList/GetLocationsByCity?cityId=${cityId}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(location => {
                            const option = document.createElement("option");
                            option.value = location.id;
                            option.textContent = location.name;
                            if (selectedLocationId && selectedLocationId == location.id) {
                                option.selected = true;
                            }
                            locationDropdown.appendChild(option);
                        });
                    });
            }

            cityDropdown.addEventListener("change", function () {
                loadLocations(this.value);
            });

            const initialCity = cityDropdown.value;
            const initialLocation = "@(ViewBag.SelectedLocationId ?? "")";
            if (initialCity) {
                loadLocations(initialCity, initialLocation);
            }
        });
    </script>
}

<!-- 🎨 Styles -->
<style>
    .btn-gradient {
        background: linear-gradient(to right, #667eea, #764ba2);
        color: white;
        border: none;
    }

        .btn-gradient:hover {
            background: linear-gradient(to right, #5a67d8, #6b46c1);
        }

    .hover-scale {
        transition: transform 0.3s ease-in-out;
    }

        .hover-scale:hover {
            transform: scale(1.03);
        }

    .building-card {
        transition: box-shadow 0.3s;
    }

        .building-card:hover {
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        }
</style>
